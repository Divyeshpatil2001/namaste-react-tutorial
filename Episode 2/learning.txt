1 what is npm?
- not node package manager.
- work as node package manager.
- its manages the packages.
- npm is standard repository for all packages.

2 how to use npm in our existing project?
- npm init
- configure things asking in command.
- help for add lib or package in our project.
- now in our project package.json created = this file is configuration for npm.

3 why we need package.json ?
- for maanging all packages.
- we use lib or pkg that version mnaaged in pkg.json.

4 what is most important package?
- Bundler = bundles app or package.
- create react app behind the scene using webpack bundler.
- we are using parcel bundler = reason(zero-configuration feature, which means that it doesn't require any configuration files to bundle your web app)
- parcel will ignite our app.

5 how we used parcel in our app?
- npm install -D parcel.
- there are two types of dependency: - 1.normal dependency(used in production also)  2. dev dependency(development for developing app)

6 difference between caret and tide in package.json?
- "parcel": "^2.12.0" = (^)caret
- "parcel": "~2.12.0" = (~)tide
- caret means automatic updates the minor version. (2.5 - 2.6 or 2.7)
- tide means automatic updates the major version.  (2.5 - 3 or 3.5)

7 when we installing package 3 files are there package.json , package-lock.json and node modules.
difference between package.json and package-lock.json?
   1.package.json 
    - track what version of package is installed.   (2.8.3)
   2. package-lock.json 
    - keeps track of exact version is installed. (2.8.5)
   3. what is node modules?
    - contain all that codes fetch from npm.
    - its like databases and actual data of those packages.

8 why its more file in the node modules folder ?
- we install package and then that package is also depend on another packages that is called transitive dependency.
- example:- install parcel now parcel also need some other package(tell npm install this also i need) and other dependent package need to install for thier. 
- parcel need babel also. thats npm installing all dependent and needed package for it.

9 how many package.json file in project?
- not one(1) its so many.
- in node modules for every package or dependency have separate package.json file.
- eg - parcel install then in node modules parcel folder having own package.json in which dependent package or needed package is there which install all package by npm. 

10 if i delete node modules how to create?
- if i have package.json and package-lock.json then i create node_modules  through [npm install].

11 if some thing not to push on github ?
- create .gitignore file add which file didn't want to push.
- which files not to push in github
    - files which regenrate that not to push in github.(parcel-cache,dist,node_modules)

12 how to building our app with parcel?
- npx parcel index.html(project source file)
- parcel created server for us our app.
- our app hosted on http://localhost:1234.
- parcel goes to source file index.html and build development build for our app and its host in localhost:1234 and we can access our app in this.

13 difference between npm and npx ?
- npm installing the package.
- npx executing the package.

14 installing react(js package) ways.
- 1. via cdn links (this is not good way)
    - its getting react by another network call.
    - if next react ver comes then we have to change cdn links for every version.(not good way) 
- 2. via npm (preferable way)
    - its install react in node modules.
    - if next react ver comes then in package.json maintain all dependency. (easy to manage)
 
15 installing react and react dom.
- npm install react.
- npm install react-dom

16 using react package.
- script add for app.js file
- but script is normal js or normal browser script that is not use import and export.
- solution make script of module (give script type)
- now script consider as module.
- now import react and react-dom comes from node modules.

17 error during running parcel with app during using react by package.(bug)
- dont try to resolve (Error: Expected content key b2cdf3442aa3c752 to exist)
- parcel cache is directory generated by parcel bundler for analyzing project dependency
- result store in cache.
- parcel can retrieve the cache data and only process modified parts saving time and resources.  
- do parcel-cache delete.(clearing the cache)
- again execute parcel it work.

18 parcel working.
- parcel very fast automatic refresh page.(on changing file)
- HMR - hot module replacement.
- parcel using file watching algorithm - written in c++
- caching - faster builds.(pacel-cache)
- parcel cache save whatever we do.(storing things again render in small time only modify things process)
- parcel gives diagnosic & good error handling
- parcel remove un used code.(tree shaking)
- parcel do also image optimization , minification , compressing file , code spilting(file also) , differential bundling(support older browser) & Bundling.(for production)
- parcel also uses consistent hashing.
- our app is hosted on http but if parcel give way to use also https(ssl)
- its create different dev and prod bundles.

19 dev build and production build.
- dev build
    - npx parcel index.
    - its generate dev build for our project and hosted in localhost:1234.
    - when genrate build its put in dist folder.
    - what we see in browser thats coming from dist.
    - when refresh page or save file its using parcel-cache and dist to update it that HMR
- prod build
    - npx parcel build index.html
    - its also build put in dist.
    - its create 1html , 1css , 1js & map files.
    - important main files: html,css,js
    - if suppose our app 20 or more files then it will compress and minifies everything to this 3 files.
    - this 3 files is production ready code.
    - prod build highly optimize build which can push prod and serve app to user.
    - it will fast , performing & optimized.

20  
